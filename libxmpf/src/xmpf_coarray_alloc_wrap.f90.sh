#!/bin/bash

#-------------------------------------------------------
#  generator of xmp_coarray_alloc_wrap.f90
#  see also ../include/xmp_lib_coarray_alloc.h
#-------------------------------------------------------

#--------------------
#  sub
#--------------------
echo72 () {
    str="$1                                                                        "
    str=`echo "$str" | cut -c -72`"&"
    echo "$str"
}

print_subr_0d() {
    tk=$1
    typekind=$2
    echo "!-----------------------------------------------------------------------"
    echo "      subroutine xmpf_coarray_alloc0d_${tk}(serno, var, count, element)"
    echo "!-----------------------------------------------------------------------"
    echo "        integer, intent(in) :: serno, count, element"
    echo "        ${typekind}, pointer, intent(out) :: var"
    echo "        ${typekind} :: obj"
    echo "        pointer (cray_ptr, obj)"
    echo "        call xmpf_coarray_malloc(serno, cray_ptr, count, element)"
    echo "        call pointer_assign(var, obj)"
    echo "        return"
    echo "      contains"
    echo "        subroutine pointer_assign(p, d)"
    echo "          ${typekind}, pointer :: p"
    echo "          ${typekind}, target :: d"
    echo "          p => d"
    echo "          return"
    echo "        end subroutine"
    echo "      end subroutine"
    echo
}

print_subr_nd() {
    tk=$1
    typekind=$2
    echo    "!-----------------------------------------------------------------------"
    echo72  "      subroutine xmpf_coarray_alloc${DIM}d_${tk}(serno, var, count, element,"

    echo -n "     &   lb1,ub1"
    if [ ${DIM} -ge 2 ]; then
	for i in `seq 2 ${DIM}`; do
            echo -n ",lb${i},ub${i}"
	done
    fi
    echo    ")"

    echo    "!-----------------------------------------------------------------------"
    echo72  "        integer, intent(in) :: serno, count, element,"
    echo -n "     &    lb1,ub1"
    if [ ${DIM} -ge 2 ]; then
	for i in `seq 2 ${DIM}`; do
            echo -n ",lb${i},ub${i}"
	done
    fi
    echo    ""

    echo -n "        ${typekind}, pointer, intent(out) :: var(:"
    if [ ${DIM} -ge 2 ]; then
	for i in `seq 2 ${DIM}`; do
            echo -n ",:"
	done
    fi
    echo    ")"

    echo72  "        ${typekind} ::"
    echo -n "     &    obj(lb1:ub1"
    if [ ${DIM} -ge 2 ]; then
	for i in `seq 2 ${DIM}`; do
            echo -n ",lb${i}:ub${i}"
	done
    fi
    echo    ")"

    echo    "        pointer (cray_ptr, obj)"
    echo    "        call xmpf_coarray_malloc(serno, cray_ptr, count, element)"
    echo    "        call pointer_assign(var, obj)"
    echo    "        return"
    echo    "      contains"
    echo    "        subroutine pointer_assign(p, d)"

    echo -n "          ${typekind}, pointer :: p(:"
    if [ ${DIM} -ge 2 ]; then
	for i in `seq 2 ${DIM}`; do
            echo -n ",:"
	done
    fi
    echo    ")"

    echo -n "          ${typekind}, target :: d(:"
    if [ ${DIM} -ge 2 ]; then
	for i in `seq 2 ${DIM}`; do
            echo -n ",:"
	done
    fi
    echo    ")"

    echo    "          p => d"
    echo    "          return"
    echo    "        end subroutine"
    echo    "      end subroutine"
    echo
}


print_subr() {
    case "${DIM}" in
        0) print_subr_0d $1 $2 ;;
        *) print_subr_nd $1 $2 ;;
    esac
}


#--------------------
#  main
#--------------------
echo "!! This file is automatically generated by xmpf_coarray_alloc_wrap.f90.sh"
echo

for DIM in `seq 0 7`
do
    print_subr i2  "integer(2)"      
    print_subr i4  "integer(4)"      
    print_subr i8  "integer(8)"      
    print_subr l2  "logical(2)"      
    print_subr l4  "logical(4)"      
    print_subr l8  "logical(8)"      
    print_subr r4  "real(4)"         
    print_subr r8  "real(8)"         
    print_subr z8  "complex(4)"      
    print_subr z16 "complex(8)"      
    print_subr cn  "character(element)" 
done

exit
