#!/bin/bash

#-------------------------------------------------------
#  generator for xmp_lib_coarray_alloc.h
#-------------------------------------------------------

#--------------------
#  sub
#--------------------
echo72 () {
    str="$1                                                                        "
    str=`echo "$str" | cut -c -72`"&"
    echo "$str"
}


print_subr() {
    tk=$1
    typekind=$2
    echo72  "      subroutine xmpf_coarray_alloc${DIM}d_${tk}(descptr, var, count, element,"
 case "${DIM}" in
 0) echo    "     & tag, rank)" ;;
 1) echo    "     & tag, rank, lb1, ub1)" ;;
 2) echo    "     & tag, rank, lb1, ub1, lb2, ub2)" ;;
 3) echo    "     & tag, rank, lb1, ub1, lb2, ub2, lb3, ub3)" ;;
 4) echo    "     & tag, rank, lb1, ub1, lb2, ub2, lb3, ub3, lb4, ub4)" ;;
 5) echo    "     & tag, rank, lb1, ub1, lb2, ub2, lb3, ub3, lb4, ub4, lb5, ub5)" ;;
 6) echo72  "     & tag, rank, lb1, ub1, lb2, ub2, lb3, ub3, lb4, ub4, lb5, ub5,"
    echo    "     & lb6, ub6)" ;;
 7) echo72  "     & tag, rank, lb1, ub1, lb2, ub2, lb3, ub3, lb4, ub4, lb5, ub5,"
    echo    "     & lb6, ub6, lb7, ub7)" ;;
 esac
    echo    "        integer(8), intent(inout) :: descptr"
    echo    "        integer(8), intent(in) :: tag"
 case "${DIM}" in
 0) echo    "        integer, intent(in) :: count, element, rank" ;;
 1) echo    "        integer, intent(in) :: count, element, rank, lb1, ub1" ;;
 2) echo    "        integer, intent(in) :: count, element, rank, lb1, ub1, lb2, ub2" ;;
 3) echo72  "        integer, intent(in) :: count, element, rank, lb1, ub1, lb2, ub2,"
    echo    "     &    lb3, ub3" ;;
 4) echo72  "        integer, intent(in) :: count, element, rank, lb1, ub1, lb2, ub2,"
    echo    "     &    lb3, ub3, lb4, ub4" ;;
 5) echo72  "        integer, intent(in) :: count, element, rank, lb1, ub1, lb2, ub2,"
    echo    "     &    lb3, ub3, lb4, ub4, lb5, ub5" ;;
 6) echo72  "        integer, intent(in) :: count, element, rank, lb1, ub1, lb2, ub2,"
    echo    "     &    lb3, ub3, lb4, ub4, lb5, ub5, lb6, ub6" ;;
 7) echo72  "        integer, intent(in) :: count, element, rank, lb1, ub1, lb2, ub2,"
    echo    "     &    lb3, ub3, lb4, ub4, lb5, ub5, lb6, ub6, lb7, ub7" ;;
 esac
 case "${DIM}" in
 0) echo    "        ${typekind}, pointer, intent(out) :: var" ;;
 1) echo    "        ${typekind}, pointer, intent(out) :: var(:)" ;;
 2) echo    "        ${typekind}, pointer, intent(out) :: var(:,:)" ;;
 3) echo    "        ${typekind}, pointer, intent(out) :: var(:,:,:)" ;;
 4) echo    "        ${typekind}, pointer, intent(out) :: var(:,:,:,:)" ;;
 5) echo    "        ${typekind}, pointer, intent(out) :: var(:,:,:,:,:)" ;;
 6) echo    "        ${typekind}, pointer, intent(out) :: var(:,:,:,:,:,:)" ;;
 7) echo    "        ${typekind}, pointer, intent(out) :: var(:,:,:,:,:,:,:)" ;;
 esac
    echo    "      end subroutine"
    echo
}


#--------------------
#  main
#--------------------
echo "!! This file is automatically generated by xmp_lib_coarray_alloc.h.sh"
echo

for DIM in `seq 0 7`
do
    echo "!-----------------------------------------------------------------------"
    echo "      interface xmpf_coarray_alloc${DIM}d"
    echo "!-----------------------------------------------------------------------"
    echo "!!!  real(kind=16) is not supported in XMP/F"
    echo "!!!  complex(kind=16) (32bytes) is not supported in XMP/F"
    echo ""

    print_subr i2  "integer(2)"      
    print_subr i4  "integer(4)"      
    print_subr i8  "integer(8)"      
    print_subr l2  "logical(2)"      
    print_subr l4  "logical(4)"      
    print_subr l8  "logical(8)"      
    print_subr r4  "real(4)"         
    print_subr r8  "real(8)"         
    print_subr z8  "complex(4)"      
    print_subr z16 "complex(8)"      
    print_subr cn  "character(element)" 

    echo "      end interface"
    echo
done

exit
