!! This file is automatically generated by /bin/bash

!-------------------------------------------------------
      interface xmpf_coarray_get0d
!-------------------------------------------------------
!!!  real(kind=16) is not supported in XMP/F
!!!  complex(kind=16) (32bytes) is not supported in XMP/F

      function xmpf_coarray_get0d_i2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      integer(2) :: mold
      integer(2) :: val
      end function
      function xmpf_coarray_get0d_i4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      integer(4) :: mold
      integer(4) :: val
      end function
      function xmpf_coarray_get0d_i8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      integer(8) :: mold
      integer(8) :: val
      end function
      function xmpf_coarray_get0d_l2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      logical(2) :: mold
      logical(2) :: val
      end function
      function xmpf_coarray_get0d_l4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      logical(4) :: mold
      logical(4) :: val
      end function
      function xmpf_coarray_get0d_l8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      logical(8) :: mold
      logical(8) :: val
      end function
      function xmpf_coarray_get0d_r4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      real(4) :: mold
      real(4) :: val
      end function
      function xmpf_coarray_get0d_r8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      real(8) :: mold
      real(8) :: val
      end function
      function xmpf_coarray_get0d_z8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      complex(4) :: mold
      complex(4) :: val
      end function
      function xmpf_coarray_get0d_z16(descptr, baseaddr, element,       &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      complex(8) :: mold
      complex(8) :: val
      end function
      function xmpf_coarray_get0d_cn(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer(8), intent(in) :: baseaddr
      character(element) :: mold
      character(element) :: val
      end function

      end interface

!-------------------------------------------------------
      interface xmpf_coarray_get1d
!-------------------------------------------------------
!!!  real(kind=16) is not supported in XMP/F
!!!  complex(kind=16) (32bytes) is not supported in XMP/F

      function xmpf_coarray_get1d_i2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(2) :: mold(count1)
      integer(2) :: val(count1)
      end function
      function xmpf_coarray_get1d_i4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(4) :: mold(count1)
      integer(4) :: val(count1)
      end function
      function xmpf_coarray_get1d_i8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8) :: mold(count1)
      integer(8) :: val(count1)
      end function
      function xmpf_coarray_get1d_l2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      logical(2) :: mold(count1)
      logical(2) :: val(count1)
      end function
      function xmpf_coarray_get1d_l4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      logical(4) :: mold(count1)
      logical(4) :: val(count1)
      end function
      function xmpf_coarray_get1d_l8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      logical(8) :: mold(count1)
      logical(8) :: val(count1)
      end function
      function xmpf_coarray_get1d_r4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      real(4) :: mold(count1)
      real(4) :: val(count1)
      end function
      function xmpf_coarray_get1d_r8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      real(8) :: mold(count1)
      real(8) :: val(count1)
      end function
      function xmpf_coarray_get1d_z8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      complex(4) :: mold(count1)
      complex(4) :: val(count1)
      end function
      function xmpf_coarray_get1d_z16(descptr, baseaddr, element,       &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      complex(8) :: mold(count1)
      complex(8) :: val(count1)
      end function
      function xmpf_coarray_get1d_cn(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      character(element) :: mold(count1)
      character(element) :: val(count1)
      end function

      end interface

!-------------------------------------------------------
      interface xmpf_coarray_get2d
!-------------------------------------------------------
!!!  real(kind=16) is not supported in XMP/F
!!!  complex(kind=16) (32bytes) is not supported in XMP/F

      function xmpf_coarray_get2d_i2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(2) :: mold(count1                                         &
         ,count2)
      integer(2) :: val(count1                                          &
         ,count2)
      end function
      function xmpf_coarray_get2d_i4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(4) :: mold(count1                                         &
         ,count2)
      integer(4) :: val(count1                                          &
         ,count2)
      end function
      function xmpf_coarray_get2d_i8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8) :: mold(count1                                         &
         ,count2)
      integer(8) :: val(count1                                          &
         ,count2)
      end function
      function xmpf_coarray_get2d_l2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      logical(2) :: mold(count1                                         &
         ,count2)
      logical(2) :: val(count1                                          &
         ,count2)
      end function
      function xmpf_coarray_get2d_l4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      logical(4) :: mold(count1                                         &
         ,count2)
      logical(4) :: val(count1                                          &
         ,count2)
      end function
      function xmpf_coarray_get2d_l8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      logical(8) :: mold(count1                                         &
         ,count2)
      logical(8) :: val(count1                                          &
         ,count2)
      end function
      function xmpf_coarray_get2d_r4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      real(4) :: mold(count1                                            &
         ,count2)
      real(4) :: val(count1                                             &
         ,count2)
      end function
      function xmpf_coarray_get2d_r8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      real(8) :: mold(count1                                            &
         ,count2)
      real(8) :: val(count1                                             &
         ,count2)
      end function
      function xmpf_coarray_get2d_z8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      complex(4) :: mold(count1                                         &
         ,count2)
      complex(4) :: val(count1                                          &
         ,count2)
      end function
      function xmpf_coarray_get2d_z16(descptr, baseaddr, element,       &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      complex(8) :: mold(count1                                         &
         ,count2)
      complex(8) :: val(count1                                          &
         ,count2)
      end function
      function xmpf_coarray_get2d_cn(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      character(element) :: mold(count1                                 &
         ,count2)
      character(element) :: val(count1                                  &
         ,count2)
      end function

      end interface

!-------------------------------------------------------
      interface xmpf_coarray_get3d
!-------------------------------------------------------
!!!  real(kind=16) is not supported in XMP/F
!!!  complex(kind=16) (32bytes) is not supported in XMP/F

      function xmpf_coarray_get3d_i2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(2) :: mold(count1                                         &
         ,count2,count3)
      integer(2) :: val(count1                                          &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_i4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(4) :: mold(count1                                         &
         ,count2,count3)
      integer(4) :: val(count1                                          &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_i8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8) :: mold(count1                                         &
         ,count2,count3)
      integer(8) :: val(count1                                          &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_l2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      logical(2) :: mold(count1                                         &
         ,count2,count3)
      logical(2) :: val(count1                                          &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_l4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      logical(4) :: mold(count1                                         &
         ,count2,count3)
      logical(4) :: val(count1                                          &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_l8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      logical(8) :: mold(count1                                         &
         ,count2,count3)
      logical(8) :: val(count1                                          &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_r4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      real(4) :: mold(count1                                            &
         ,count2,count3)
      real(4) :: val(count1                                             &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_r8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      real(8) :: mold(count1                                            &
         ,count2,count3)
      real(8) :: val(count1                                             &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_z8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      complex(4) :: mold(count1                                         &
         ,count2,count3)
      complex(4) :: val(count1                                          &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_z16(descptr, baseaddr, element,       &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      complex(8) :: mold(count1                                         &
         ,count2,count3)
      complex(8) :: val(count1                                          &
         ,count2,count3)
      end function
      function xmpf_coarray_get3d_cn(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      character(element) :: mold(count1                                 &
         ,count2,count3)
      character(element) :: val(count1                                  &
         ,count2,count3)
      end function

      end interface

!-------------------------------------------------------
      interface xmpf_coarray_get4d
!-------------------------------------------------------
!!!  real(kind=16) is not supported in XMP/F
!!!  complex(kind=16) (32bytes) is not supported in XMP/F

      function xmpf_coarray_get4d_i2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(2) :: mold(count1                                         &
         ,count2,count3,count4)
      integer(2) :: val(count1                                          &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_i4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(4) :: mold(count1                                         &
         ,count2,count3,count4)
      integer(4) :: val(count1                                          &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_i8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8) :: mold(count1                                         &
         ,count2,count3,count4)
      integer(8) :: val(count1                                          &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_l2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      logical(2) :: mold(count1                                         &
         ,count2,count3,count4)
      logical(2) :: val(count1                                          &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_l4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      logical(4) :: mold(count1                                         &
         ,count2,count3,count4)
      logical(4) :: val(count1                                          &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_l8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      logical(8) :: mold(count1                                         &
         ,count2,count3,count4)
      logical(8) :: val(count1                                          &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_r4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      real(4) :: mold(count1                                            &
         ,count2,count3,count4)
      real(4) :: val(count1                                             &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_r8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      real(8) :: mold(count1                                            &
         ,count2,count3,count4)
      real(8) :: val(count1                                             &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_z8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      complex(4) :: mold(count1                                         &
         ,count2,count3,count4)
      complex(4) :: val(count1                                          &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_z16(descptr, baseaddr, element,       &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      complex(8) :: mold(count1                                         &
         ,count2,count3,count4)
      complex(8) :: val(count1                                          &
         ,count2,count3,count4)
      end function
      function xmpf_coarray_get4d_cn(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      character(element) :: mold(count1                                 &
         ,count2,count3,count4)
      character(element) :: val(count1                                  &
         ,count2,count3,count4)
      end function

      end interface

!-------------------------------------------------------
      interface xmpf_coarray_get5d
!-------------------------------------------------------
!!!  real(kind=16) is not supported in XMP/F
!!!  complex(kind=16) (32bytes) is not supported in XMP/F

      function xmpf_coarray_get5d_i2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(2) :: mold(count1                                         &
         ,count2,count3,count4,count5)
      integer(2) :: val(count1                                          &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_i4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(4) :: mold(count1                                         &
         ,count2,count3,count4,count5)
      integer(4) :: val(count1                                          &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_i8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8) :: mold(count1                                         &
         ,count2,count3,count4,count5)
      integer(8) :: val(count1                                          &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_l2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      logical(2) :: mold(count1                                         &
         ,count2,count3,count4,count5)
      logical(2) :: val(count1                                          &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_l4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      logical(4) :: mold(count1                                         &
         ,count2,count3,count4,count5)
      logical(4) :: val(count1                                          &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_l8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      logical(8) :: mold(count1                                         &
         ,count2,count3,count4,count5)
      logical(8) :: val(count1                                          &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_r4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      real(4) :: mold(count1                                            &
         ,count2,count3,count4,count5)
      real(4) :: val(count1                                             &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_r8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      real(8) :: mold(count1                                            &
         ,count2,count3,count4,count5)
      real(8) :: val(count1                                             &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_z8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      complex(4) :: mold(count1                                         &
         ,count2,count3,count4,count5)
      complex(4) :: val(count1                                          &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_z16(descptr, baseaddr, element,       &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      complex(8) :: mold(count1                                         &
         ,count2,count3,count4,count5)
      complex(8) :: val(count1                                          &
         ,count2,count3,count4,count5)
      end function
      function xmpf_coarray_get5d_cn(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      character(element) :: mold(count1                                 &
         ,count2,count3,count4,count5)
      character(element) :: val(count1                                  &
         ,count2,count3,count4,count5)
      end function

      end interface

!-------------------------------------------------------
      interface xmpf_coarray_get6d
!-------------------------------------------------------
!!!  real(kind=16) is not supported in XMP/F
!!!  complex(kind=16) (32bytes) is not supported in XMP/F

      function xmpf_coarray_get6d_i2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(2) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6)
      integer(2) :: val(count1                                          &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_i4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(4) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6)
      integer(4) :: val(count1                                          &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_i8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6)
      integer(8) :: val(count1                                          &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_l2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      logical(2) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6)
      logical(2) :: val(count1                                          &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_l4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      logical(4) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6)
      logical(4) :: val(count1                                          &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_l8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      logical(8) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6)
      logical(8) :: val(count1                                          &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_r4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      real(4) :: mold(count1                                            &
         ,count2,count3,count4,count5,count6)
      real(4) :: val(count1                                             &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_r8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      real(8) :: mold(count1                                            &
         ,count2,count3,count4,count5,count6)
      real(8) :: val(count1                                             &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_z8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      complex(4) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6)
      complex(4) :: val(count1                                          &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_z16(descptr, baseaddr, element,       &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      complex(8) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6)
      complex(8) :: val(count1                                          &
         ,count2,count3,count4,count5,count6)
      end function
      function xmpf_coarray_get6d_cn(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      character(element) :: mold(count1                                 &
         ,count2,count3,count4,count5,count6)
      character(element) :: val(count1                                  &
         ,count2,count3,count4,count5,count6)
      end function

      end interface

!-------------------------------------------------------
      interface xmpf_coarray_get7d
!-------------------------------------------------------
!!!  real(kind=16) is not supported in XMP/F
!!!  complex(kind=16) (32bytes) is not supported in XMP/F

      function xmpf_coarray_get7d_i2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      integer(2) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6,count7)
      integer(2) :: val(count1                                          &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_i4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      integer(4) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6,count7)
      integer(4) :: val(count1                                          &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_i8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      integer(8) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6,count7)
      integer(8) :: val(count1                                          &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_l2(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      logical(2) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6,count7)
      logical(2) :: val(count1                                          &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_l4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      logical(4) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6,count7)
      logical(4) :: val(count1                                          &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_l8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      logical(8) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6,count7)
      logical(8) :: val(count1                                          &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_r4(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      real(4) :: mold(count1                                            &
         ,count2,count3,count4,count5,count6,count7)
      real(4) :: val(count1                                             &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_r8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      real(8) :: mold(count1                                            &
         ,count2,count3,count4,count5,count6,count7)
      real(8) :: val(count1                                             &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_z8(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      complex(4) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6,count7)
      complex(4) :: val(count1                                          &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_z16(descptr, baseaddr, element,       &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      complex(8) :: mold(count1                                         &
         ,count2,count3,count4,count5,count6,count7)
      complex(8) :: val(count1                                          &
         ,count2,count3,count4,count5,count6,count7)
      end function
      function xmpf_coarray_get7d_cn(descptr, baseaddr, element,        &
     &   coindex, mold, rank                                            &
     &   , nextaddr1, count1                                            &
     &   , nextaddr2, count2                                            &
     &   , nextaddr3, count3                                            &
     &   , nextaddr4, count4                                            &
     &   , nextaddr5, count5                                            &
     &   , nextaddr6, count6                                            &
     &   , nextaddr7, count7                                            &
     &   ) result(val)
      integer(8), intent(in) :: descptr
      integer, intent(in) :: element, coindex, rank
      integer, intent(in) :: count1
      integer, intent(in) :: count2
      integer, intent(in) :: count3
      integer, intent(in) :: count4
      integer, intent(in) :: count5
      integer, intent(in) :: count6
      integer, intent(in) :: count7
      integer(8), intent(in) :: baseaddr
      integer(8), intent(in) :: nextaddr1
      integer(8), intent(in) :: nextaddr2
      integer(8), intent(in) :: nextaddr3
      integer(8), intent(in) :: nextaddr4
      integer(8), intent(in) :: nextaddr5
      integer(8), intent(in) :: nextaddr6
      integer(8), intent(in) :: nextaddr7
      character(element) :: mold(count1                                 &
         ,count2,count3,count4,count5,count6,count7)
      character(element) :: val(count1                                  &
         ,count2,count3,count4,count5,count6,count7)
      end function

      end interface

