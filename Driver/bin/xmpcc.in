#!/bin/bash

# $TSUKUBA_Release: Omni OpenMP Compiler 3 $
# $TSUKUBA_Copyright:
#  PLEASE DESCRIBE LICENSE AGREEMENT HERE
#  $

stderr() {
    echo $* 1>&2
}

error() {
    stderr "error: $*"
}

BINDIR=`dirname $0`
GPGPU_PREFIX=@GPGPU_PREFIX@

selective_profile=0
all_profile=0
doScalasca=0
doTlog=0
doProf=0
export useDom=1
args=()
for i in "$@"; do
    case "${i}" in
        -profile|-allprofile|-with-scalasca|-with-tlog)
            case "${i}" in
		-profile)
		    selective_profile=1;;
		-allprofile)
		    all_profile=1;;
                -with-scalasca)
                    doScalasca=1;;
                -with-tlog)
                    doTlog=1;;
            esac
            doProf=1
            args=("${args[@]}" "--Wx${i}");;
        -enable-threads)
            args=("${args[@]}" "--Wx${i}" "--Wl${i}" "--Wn-D_OPENMP=200203");;
        -enable-gpu)
            if test @XMP_ENABLE_GPU@ -eq 1; then
                args=("${args[@]}" "--Wx${i}" "--Wl${i}" "--Wn${i}")
            else
                echo "warning: -enable-gpu option is unavailable, rebuild the compiler with ./configure --enable-xmpgpu"
            fi;;
        -tmp)
            args=("${args[@]}" "--Wn${i}");;
	-use-relaxer)
	    export useDom=0;;
	-disable-pragma-macro)
	    args=("${args[@]}" "--Wp-no-replace-pragma");;
	-facc)
	    if test @ENABLE_ACC@ -eq 1; then
		args=("${args[@]}" "--Wf${i}" "--Wx${i}" "--Wl${i}" "--Wn${i}")
	    else
		echo "warning: -facc option is unavailable, rebuild the compiler with ./configure --enable-openacc"
            fi;;
        *)
            args=("${args[@]}" "${i}");;
    esac
done

if test ${useDom} -eq 0; then
    args=("${args[@]}" "--Wx-use-relaxer")
else
    args=("${args[@]}" "--Wf-fxmp")
fi

if test ${selective_profile} -eq 1 -a ${all_profile} -eq 1; then
    error "Please select only one, \"-profile\" or \"-allprofile\"."
    exit 1
fi

if test ${doTlog} -eq 1 -a ${doScalasca} -eq 1; then
    error "Please select only one, \"-with-scalasca\" or \"-with-tlog\"."
    exit 1
fi

# xmpcc -with-scalasca hoge.c -o hoge
#  -> xmpcc -with-scalasca hoge.c -o hoge -allprofile
if test ${doScalasca} -eq 1; then
    if test ${all_profile} -eq 0 -a ${selective_profile} -eq 0; then
        all_profile=1
	args=("${args[@]}" "--Wx-allprofile")
    fi
fi

# xmpcc -with-tlog hoge.c -o hoge
#  -> xmpcc -with-tlog hoge.c -o hoge -allprofile
if test ${doTlog} -eq 1; then
    if test ${all_profile} -eq 0 -a ${selective_profile} -eq 0; then
        all_profile=1
	args=("${args[@]}" "--Wx-allprofile")
    fi
fi

if test ${doProf} -eq 1; then
    if test ${doTlog} -eq 0 -a ${doScalasca} -eq 0; then
        doScalasca=1
    fi
fi

if test ${doScalasca} -eq 1; then
    if test -z "${SCALASCA_HOME}"; then
        error "environmental variable SCALASCA_HOME not set."
        exit 1
    fi
    args=("--Wn-DEPIK" "--Wn-I${SCALASCA_HOME}/include" "${args[@]}" "--Wl-prof-scalasca")
elif test ${doTlog} -eq 1; then
    PREFIX=@prefix@
    TLOG_MPI_LIB=${PREFIX}/lib
    args=("--Wn-I${TLOG_MPI_LIB}" "${args[@]}" "--Wl-prof-tlog")
fi

if test ${doProf} -eq 1 -a ${doScalasca} -eq 0; then
    args=("${args[@]}" "--Wl-ltlog_mpi")
fi

set -- "${args[@]}"

exec ${BINDIR}/omdriver --xc -Txmp "$@"

exit $?
